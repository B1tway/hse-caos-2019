/*
        это пример перемещаемого кода для 64-битной динамической компоновки
        в 64-битном режиме есть новый метод адресации rip-relative, который
        сильно упрощает позиционно-независимый код
        в 64-битном режиме нет особого смысла генерировать не позиционно-независимый код
*/
        .att_syntax     noprefix
        .text
        .align  16
        .global func
        .extern A, B, C
        .type   func, @function
func:
        mov     A@GOTPCREL(rip), rax // A@GOTPCREL - это смещение относительно текущего значения rip (то есть адреса следующей инструкции)
                                     // сразу до ячейки в GOT, которая содержит актуальный адрес переменной A
                                     // в итоге в регистре rax будет находиться актуальный адрес переменной A
        mov     (rax), eax           // загружаем текущее значение переменной A в регистр eax
        mov     B@GOTPCREL(rip), rcx
        add     (rcx), eax
        mov     C@GOTPCREL(rip), rcx
        mov     eax, (rcx)
        ret
