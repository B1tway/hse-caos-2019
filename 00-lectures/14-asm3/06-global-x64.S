// обращение к глобальной переменной на x86_64 с помощью PC-relative метода адресации
// скомпилируйте gcc 06-global-x64.S main.c
// посмотрите сгенерированный код objdump -j .text -D a.out        
func:
        movl    x(%rip), %eax
        ret

        .data
        .global x
x:      .int    0

/*
0000000000401116 <func>:
  401116:	8b 05 00 2f 00 00    	mov    0x2f00(%rip),%eax        # 40401c <x>
  40111c:	c3                   	retq   
*/

/*
переменная x размещена в памяти по адресу 0x40401c
но в бинарном коде скомпилированной программы используется не адрес
а смещение от значения %rip, равного 0x40111c (%rip хранит адрес инструкции, следующей за выполняемой)
это смещение равно 0x40401c - 0x40111c = 0x2f00 и оно записано в бинарном коде 00 2f 00 00 - 4 байта в Little-endian порядке
*/
        
